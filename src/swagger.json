{
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "REST API, Shopify Fall 2021 Challenge",
    "description": "Express API with MongoDB Atlas and JWT Authentication, and AWS S3 Bucket for Image Storage",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000/",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Creates new user in MongoDB upon successful registration",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "example": "johndoe@gmail.com"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "example": "password"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "One of: ['User could not be created', 'Email or password input is invalid'] "
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Logs user in and generates a valid 24-hour JWT upon success",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "User email",
            "example": "johndoe@gmail.com"
          },
          {
            "name": "password",
            "in": "body",
            "description": "User password",
            "example": "password"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JWT, Current User Document"
          },
          "400": {
            "description": "Email or password input is invalid"
          },
          "401": {
            "description": "Invalid Credentials"
          }
        }
      }
    },
    "/images/newImage": {
      "post": {
        "tags": [
          "Image CRUD"
        ],
        "description": "Uploads an image into a S3 Bucket, denoted by each User's unique ID",
        "parameters": [
          {
            "name": "User ID",
            "in": "body",
            "description": "User's Unique ID",
            "example": "608b9c787dc53031f83763a8"
          },
          {
            "name": "Image",
            "in": "body",
            "description": "Image File User is Uploading",
            "example": "C:/Users/johndoe/Downloads/nodejs.png"
          },
          {
            "name": "JWT",
            "in": "body",
            "description": "Valid JWT to Authenticate Request",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDhiOWM3ODdkYzUzMDMxZjgzNzYzYTgiLCJpYXQiOjE2MjAwOTY3ODcsImV4cCI6MTYyMDE4MzE4N30.6QbspydYaXW8I1zKIsLmg2kYkNF2s4xYir8XhpdyCl4"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Image Uploaded Successfully. image_url: [imageURL], image_key: [imageKey], imageID: [imageID]"
          },
          "400": {
            "description": "Missing required parameter(s)"
          },
          "415": {
            "description": "Inputted file is not an accepted image type"
          }
        }
      }
    },
    "/images/getImage": {
      "get": {
        "tags": [
          "Image CRUD"
        ],
        "description": "Gets any and all images uploaded or owned by the current user.",
        "parameters": [
          {
            "name": "User ID",
            "in": "body",
            "description": "User's Unique ID",
            "example": "608b9c787dc53031f83763a8"
          },
          {
            "name": "JWT",
            "in": "body",
            "description": "Valid JWT to Authenticate Request",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDhiOWM3ODdkYzUzMDMxZjgzNzYzYTgiLCJpYXQiOjE2MjAwOTY3ODcsImV4cCI6MTYyMDE4MzE4N30.6QbspydYaXW8I1zKIsLmg2kYkNF2s4xYir8XhpdyCl4"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "[Collection of User's Images]"
          },
          "400": {
            "description": "Missing userID"
          }
        }
      }
    },
    "/images/deleteImage": {
      "delete": {
        "tags": [
          "Image CRUD"
        ],
        "description": "Deletes an image, as specified by the user.",
        "parameters": [
          {
            "name": "User ID",
            "in": "body",
            "description": "User's Unique ID",
            "example": "608b9c787dc53031f83763a8"
          },
          {
            "name": "Image ID",
            "in": "body",
            "description": "ID of Specific Image to be Deleted",
            "example": "36c549db-6c96-4875-a6a5-6e1e962b6aa6"
          },
          {
            "name": "Image Key",
            "in": "body",
            "description": "Absolute File URL of Specific Image to Delete",
            "example": "36c549db-6c96-4875-a6a5-6e1e962b6aa6_nodejs.png"
          },
          {
            "name": "JWT",
            "in": "body",
            "description": "Valid JWT to Authenticate Request",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MDhiOWM3ODdkYzUzMDMxZjgzNzYzYTgiLCJpYXQiOjE2MjAwOTY3ODcsImV4cCI6MTYyMDE4MzE4N30.6QbspydYaXW8I1zKIsLmg2kYkNF2s4xYir8XhpdyCl4"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Image deleted successfully"
          },
          "400": {
            "description": "Missing required parameter(s)"
          },
          "404": {
            "description": "File does not exist"
          }
        }
      }
    }
  }
}
